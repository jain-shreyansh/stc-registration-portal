{"version":3,"sources":["assets/img/thank-you.png","assets/img/happy.svg","components/navbar.component.jsx","components/footer.component.jsx","components/error/error.component.jsx","components/hero.jsx","actions/authActions.js","utils/integration.js","actions/types.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","components/end_exam.component.jsx","App.js","serviceWorker.js","index.js","assets/img/brand/white.svg"],"names":["module","exports","Navbar1","className","Navbar","expand","id","Container","NavbarBrand","to","UncontrolledCollapse","navbar","toggler","Row","Col","xs","Nav","UncontrolledDropdown","nav","NavItem","NavLink","href","target","UncontrolledTooltip","delay","Component","Footer","style","margin","textAlign","lg","fontSize","alt","src","footimage","height","paddingBottom","color","marginTop","Date","getFullYear","Error","onLogout","e","preventDefault","props","history","push","window","scrollTo","require","Hero","onChangeCheck","checked","setState","onChange","value","toUpperCase","onChangeAlter","toggleDate","dropDownDateOpen","state","toggleTime","dropDownTimeOpen","selectDateValue","dateValue","selectTimeValue","timeValue","onSubmit","userData","regNo","email","mobileNo","name","domain","tech_domain","buttonState","axios","post","qs","stringify","headers","then","catch","nameFocused","emailFocused","blockName","roomNo","errors","vision","loading","nextProps","this","setTimeout","padding","fontWeight","noValidate","FormGroup","classnames","focused","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","type","error","invalid","namenotfound","marginBottom","regnotfound","Dropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","onClick","Button","disabled","length","marginRight","connect","registerUser","dispatch","res","err","payload","response","data","initialState","user","combineReducers","auth","action","middleware","thunk","store","createStore","roorReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Finish","logout","App","basename","process","path","exact","render","component","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.a0ec2370.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thank-you.590ed185.png\";","module.exports = __webpack_public_path__ + \"static/media/happy.188f11ca.svg\";","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  UncontrolledCollapse,\r\n  UncontrolledDropdown,\r\n  NavbarBrand,\r\n  Navbar,\r\n  NavItem,\r\n  NavLink,\r\n  Nav,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\";\r\n\r\nclass Navbar1 extends Component {\r\n  // componentDidMount() {\r\n  //   // let headroom = new Headroom(document.getElementById(\"navbar-main\"));\r\n  //   // headroom.init()\r\n  // }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"header-global\">\r\n          <Navbar\r\n            className=\"navbar-main navbar-transparent navbar-light headroom\"\r\n            expand=\"lg\"\r\n            id=\"navbar-main\"\r\n          >\r\n            <Container>\r\n              <NavbarBrand className=\"mr-lg-5\" ><Link to='/'>\r\n                <h3 className=\"text-white\"><b>Easy</b>Recruit</h3></Link>\r\n              </NavbarBrand>\r\n              <button className=\"navbar-toggler\" id=\"navbar_global\">\r\n                <span className=\"navbar-toggler-icon\" />\r\n              </button>\r\n              <UncontrolledCollapse navbar toggler=\"#navbar_global\">\r\n                <div className=\"navbar-collapse-header\">\r\n                  <Row>\r\n                    <Col className=\"collapse-brand\" xs=\"6\">\r\n\r\n                    </Col>\r\n                    <Col className=\"collapse-close\" xs=\"6\">\r\n                      <button className=\"navbar-toggler\" id=\"navbar_global\">\r\n                        <span />\r\n                        <span />\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n                <Nav className=\"navbar-nav-hover align-items-lg-center\" navbar>\r\n                  <UncontrolledDropdown nav>\r\n\r\n                  </UncontrolledDropdown>\r\n                  <UncontrolledDropdown nav>\r\n                    {/*   */}\r\n                  </UncontrolledDropdown>\r\n                </Nav>\r\n                <Nav className=\"align-items-lg-center ml-lg-auto\" navbar>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className=\"nav-link-icon\"\r\n                      href=\"https://www.facebook.com/mstcvit/\"\r\n                      id=\"tooltip333589074\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i className=\"fa fa-facebook-square\" />\r\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\r\n                        Facebook\r\n                      </span>\r\n                    </NavLink>\r\n                    <UncontrolledTooltip delay={0} target=\"tooltip333589074\">\r\n                      Like us on Facebook\r\n                    </UncontrolledTooltip>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className=\"nav-link-icon\"\r\n                      href=\"https://www.instagram.com/mstcvit/\"\r\n                      id=\"tooltip356693867\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i className=\"fa fa-instagram\" />\r\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\r\n                        Instagram\r\n                      </span>\r\n                    </NavLink>\r\n                    <UncontrolledTooltip delay={0} target=\"tooltip356693867\">\r\n                      Follow us on Instagram\r\n                    </UncontrolledTooltip>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <NavLink\r\n                      className=\"nav-link-icon\"\r\n                      href=\"https://www.linkedin.com/company/micvitvellore\"\r\n                      id=\"tooltip356693869\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i className=\"fa fa-linkedin\" />\r\n                      <span className=\"nav-link-inner--text d-lg-none ml-2\">\r\n                        LinkedIn\r\n                      </span>\r\n                    </NavLink>\r\n                    <UncontrolledTooltip delay={0} target=\"tooltip356693869\">\r\n                      Follow us on LinkedIn\r\n                    </UncontrolledTooltip>\r\n                  </NavItem>\r\n\r\n                </Nav>\r\n              </UncontrolledCollapse>\r\n            </Container>\r\n          </Navbar>\r\n        </header>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar1","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport footimage from '../assets/img/brand/white.svg'\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div >\r\n        <footer className=\" footer\">\r\n          <Container>\r\n            <div style={{ margin: 'auto', textAlign: \"center\" }}>\r\n              <Row>\r\n              <Col lg=\"6\">\r\n                  <div className=\" copyright text-white\" style={{fontSize:'1.2rem'}}>\r\n                  Brought to you by  \r\n                  </div><br />\r\n                  <a href='https://stcvit.in'>\r\n                <img\r\n                  alt=\"...\"\r\n                  className=\"img-fluid\"\r\n                  src={footimage}\r\n                  style={{ height: \"7em\", paddingBottom: \"1em\" }}\r\n                  /></a>\r\n               \r\n              </Col>\r\n                <Col>\r\n                  <span style={{ color: 'white', paddingBottom: '1.5em', fontSize: '1.2rem' }}>Follow us at</span><br />\r\n                  <div style={{marginTop:'1em'}}>\r\n                  <a href='https://www.instagram.com/mstcvit/' style={{margin:'1em'}}>\r\n                    <i className=\"fa fa-instagram text-white foot\" />\r\n                  </a>\r\n                  <a href='https://www.facebook.com/mstcvit/' style={{ margin: '1em' }}>\r\n                    <i className=\"fa fa-facebook text-white foot\" />\r\n                  </a>\r\n                  <a href='https://www.linkedin.com/company/micvitvellore' style={{ margin: '1em' }}>\r\n                    <i className=\"fa fa-linkedin text-white foot\" />\r\n                    </a>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <hr color='white'/>\r\n              <Col>\r\n                <div className=\" copyright text-white\">\r\n                  © {new Date().getFullYear()}{\" \"}\r\n                  Student Technical Community .\r\n\r\n                </div>\r\n              \r\n                <div className=\"copyright text-white\">\r\n                  <p>Designed by <a href=\"https://www.linkedin.com/in/sanket-mohapatra-b10661176/\"> Sanket Mohapatra</a></p>\r\n                </div>\r\n              </Col>\r\n            </div>\r\n\r\n          </Container>\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react'\r\nimport Navbar1 from './../navbar.component';\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\n\r\nimport Footer from './../footer.component';\r\nimport { Link } from 'react-router-dom';\r\nclass Error extends Component {\r\n    onLogout = (e) => {\r\n        e.preventDefault();        \r\n        this.props.history.push('/')\r\n    }\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar1 />\r\n                <section className=\"section section-lg section-shaped\">\r\n                    <div className=\"shape shape-style-1 shape-default\">\r\n\r\n                    </div>\r\n                    <Container className=\"py-md\">\r\n                        <Row className=\"row-grid justify-content-between align-items-center\">\r\n                            <div style={{ margin: \"auto\", textAlign: \"center\" }}>\r\n                                <Col lg=\"12\">\r\n                                    <img\r\n                                        alt=\"...\"\r\n                                        className=\"img-fluid\"\r\n                                        style={{ paddingBottom: \"1em\", height: \"20em\" }}\r\n                                        src={require(\"../../assets/img/thank-you.png\")}\r\n\r\n                                    />\r\n                                    {/* <br style={{ height: '20em' }} /> */}\r\n                                    <h1 className=\"display-3 text-white\">\r\n                                        Thank you for your overwhelming response!\r\n                                    </h1>\r\n                                    <p className=\"lead text-white\">\r\n\r\n                                        We are glad to see such enthusiasm and we hope that we will come back with a lot more opportunities and surprises in the time to come.  </p>\r\n                                 \r\n                                </Col>\r\n                            </div>\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Error","import React, { Component } from 'react'\nimport Navbar1 from './navbar.component'\nimport Footer from './footer.component'\nimport classnames from 'classnames'\nimport { Col, Row, Container, Button, FormGroup, InputGroup, Input, InputGroupAddon, InputGroupText, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\nimport { registerUser } from '../actions/authActions'\nimport footimage from '../assets/img/brand/white.svg'\nimport axios from 'axios'\nimport qs from 'querystring'\n\nclass Hero extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nameFocused: '',\n            emailFocused: '',\n            name: '',\n            regNo: '',\n            mobileNo: '',\n            blockName: '',\n            roomNo: '',\n            email: '',\n            errors: {},\n            vision:'',\n            loading: false,\n            domain: '',\n            tech_domain: '',\n            dropDownDateOpen: false,\n            dropDownTimeOpen: false,\n\n            dateValue: 'Date',\n            timeValue: 'Time'\n\n        }\n    }\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n       \n    componentWillReceiveProps(nextProps) {\n       \n        if (nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            })\n        }\n    }\n    onChangeCheck = e => {\n        if (e.target.checked) {\n            this.setState({\n                [e.target.id]: true\n            })\n        } else {\n            this.setState({\n                [e.target.id]: false\n            })\n        }\n    }\n\n    onChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value.toUpperCase()\n        })\n\n    }\n    onChangeAlter = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    toggleDate = e => {\n        this.setState({\n            dropDownDateOpen: !this.state.dropDownDateOpen\n        })\n    }\n    toggleTime = e => {\n        this.setState({\n            dropDownTimeOpen: !this.state.dropDownTimeOpen\n        })\n    }\n    \n    selectDateValue = e => {\n        this.setState({\n            dateValue: e.target.id\n        })\n    }\n    selectTimeValue = e => {\n        this.setState({\n            timeValue: e.target.id\n        })\n    }\n    buttonState() {\n        this.setState({\n            loading: true\n        })\n        setTimeout(() => {\n            this.setState({\n                loading: false\n            })\n        }, 5000)\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        let userData = {\n            \"entry.223933096\": this.state.regNo,\n            \"entry.300677225\": this.state.email,\n            \"entry.73499461\": this.state.mobileNo,\n            \"entry.877919449\": this.state.name,\n            \"entry.740442512\": this.state.domain,\n            \"entry.254028970\": this.state.tech_domain,\n            \"entry.331608497\": this.state.dateValue,\n            \"entry.643192952\": this.state.timeValue\n            \n        }\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        }\n        this.buttonState();\n        axios.post('https://docs.google.com/forms/d/e/1FAIpQLSdBnhSGl6dPtuUs0BlZRTBwLhXZ4P8WxmPHHGhn8xhYJE_Fwg/formResponse', qs.stringify(userData), config)\n            .then(() => {\n                this.props.history.push('/finish')\n            }).catch(() => {\n                this.props.history.push('/finish')\n            })\n    }\n    render() {\n        const { errors, loading } = this.state;\n        return (\n            <div>\n\n                <Navbar1 />\n                <section className=\"section section-shaped\">\n                    <div className=\"shape shape-style-1 shape-default\">\n\n                    </div>\n                    <Container className=\"py-md\">\n                        <Row className=\"justify-content-between align-items-center\">\n                            <Col className=\"mb-lg-auto\" lg=\"6\">\n\n                                <div style={{ margin: 'auto', textAlign: 'center' }}>\n                                    <img\n                                        alt=\"...\"\n                                        className=\"img-fluid\"\n                                        style={{ height: \"15em\",padding:'2em' }}\n                                        src={footimage}\n\n                                    />\n                                    <h1 className=\"display-4  text-white\" style={{ fontWeight: \"300\" }}>Just fill in the details and we will get back to you ASAP!</h1>\n                                    <span>Thank you for taking interest to be a part of our journey.We hope you make it to the top and we look forward to work with you.</span>\n                                </div>\n                            </Col>\n                            <Col className=\"mb-lg-auto\" lg=\"6\">\n                                <div style={{ margin: 'auto', textAlign: 'center' }}></div>\n                                <h2 className=\"display-3 text-white\">\n                                    Hey let's know about you\n                                </h2>\n\n\n                                {/* The start of the form  */}\n                                <form noValidate onSubmit={this.onSubmit}>\n                                    <FormGroup\n                                        className={classnames(\"mt-5\", {\n                                            focused: this.state.nameFocused\n                                        })}\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"ni ni-user-run\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                id=\"name\"\n                                                placeholder=\"What's your name?\"\n                                                type=\"text\"\n                                                name=\"name\"\n                                                onChange={this.onChange}\n                                                value={this.state.name}\n                                                error={errors.name}\n\n                                                className={classnames(\"\", {\n                                                    invalid: errors.name || errors.namenotfound\n                                                })}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.name}\n                                        </span> </div>\n                                    <FormGroup\n                                        className={classnames({\n                                            focused: this.state.emailFocused\n                                        })}\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-user\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n\n                                                placeholder=\"Registration no.\"\n                                                type=\"text\"\n                                                name=\"regNo\"\n                                                id='regNo'\n                                                onChange={this.onChange}\n                                                value={this.state.regNo}\n                                                error={errors.regNo}\n\n                                                className={classnames(\"\", {\n                                                    invalid: errors.regNo || errors.regnotfound\n                                                })}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.regNo}\n                                        </span> </div>\n\n\n                                    <FormGroup\n                                        className={classnames({\n                                            focused: this.state.emailFocused\n                                        })}\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"ni ni-email-83\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                id=\"email\"\n                                                placeholder=\"Email address(Ex. john.doe2020@vitstudent.ac.in)\"\n                                                type=\"email\"\n                                                name=\"email\"\n                                                onChange={this.onChangeAlter}\n                                                value={this.state.email}\n                                                error={errors.email}\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.email}\n                                        </span> </div>\n                                    <FormGroup\n\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-phone\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                placeholder=\"Mobile No.\"\n                                                type=\"number\"\n                                                name=\"phone\"\n                                                id='mobileNo'\n                                                onChange={this.onChange}\n                                                value={this.state.mobileNo}\n                                                error={errors.mobileNo}\n\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <div className=\"center-tag\"\n                                        style={{ margin: 'auto', textAlign: 'center', marginBottom: \"1em\" }}>\n\n                                        <span className=\"red-text\"\n                                            style={\n                                                {\n                                                    color: 'red'\n                                                }\n                                            }>\n                                            {errors.mobileNo}\n                                        </span> </div>\n                                    \n                                    <span className='text-white'>Please mention your preferred domain.(You can select more than one)</span><br /><br />\n\n                                    <FormGroup\n\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-info\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                placeholder=\"(Design/Technical/Management)\"\n                                                type=\"text\"\n                                                name=\"domain\"\n                                                id='domain'\n                                                onChange={this.onChange}\n                                                value={this.state.domain}\n                                                error={errors.domain}\n\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <span className='text-white'>If you are applying for Technical domain, what's your preferred tech domain? (If you haven't decided then mention 'NA')</span><br /><br />\n                                    <FormGroup\n\n                                    >\n                                        <InputGroup className=\"input-group-alternative\">\n                                            <InputGroupAddon addonType=\"prepend\">\n                                                <InputGroupText>\n                                                    <i className=\"fa fa-info\" />\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                            <Input\n                                                placeholder=\"Ex. Web development/Android/Machine Learning/IoT\"\n                                                type=\"text\"\n                                                name=\"tech_domain\"\n                                                id='tech_domain'\n                                                onChange={this.onChange}\n                                                value={this.state.tech_domain}\n                                                error={errors.domain}\n\n                                            />\n                                        </InputGroup>\n                                    </FormGroup>\n                                    <span className='text-white'>Select Date and Time slot for first round selection.(There may be changes in the actual schedule which may be duly communicated beforehand.)</span><br /><br />\n\n                                    <Dropdown isOpen={this.state.dropDownDateOpen} toggle={this.toggleDate}>\n                                        <DropdownToggle caret>\n                                            {this.state.dateValue}\n                                        </DropdownToggle>\n                                        <DropdownMenu>\n\n                                            <DropdownItem><div onClick={this.selectDateValue} id=\"12 Dec\">12 Dec</div></DropdownItem>\n                                            <DropdownItem><div onClick={this.selectDateValue} id=\"13 Dec\">13 Dec</div></DropdownItem>\n                                            <DropdownItem><div onClick={this.selectDateValue} id=\"14 Dec\">14 Dec</div></DropdownItem>\n                                            <DropdownItem><div onClick={this.selectDateValue} id=\"15 Dec\">15 Dec</div></DropdownItem>\n                                            <DropdownItem><div onClick={this.selectDateValue} id=\"16 Dec\">16 Dec</div></DropdownItem>\n\n                                        </DropdownMenu>\n                                    </Dropdown><br /><br />\n\n                                    <Dropdown isOpen={this.state.dropDownTimeOpen} toggle={this.toggleTime}>\n                                        <DropdownToggle caret>\n                                            {this.state.timeValue}\n                                        </DropdownToggle>\n                                        <DropdownMenu>\n\n                                            <DropdownItem><div onClick={this.selectTimeValue} id=\"9.30AM TO 10.30AM\">9.30AM TO 10.30AM</div></DropdownItem>\n                                            <DropdownItem><div onClick={this.selectTimeValue} id=\"3.30PM TO 4.30PM\">3.30PM TO 4.30PM</div></DropdownItem>\n                                            <DropdownItem><div onClick={this.selectTimeValue} id=\"7.00PM TO 9.00PM\">7.00PM TO 9.00PM</div></DropdownItem>\n                                            \n\n                                        </DropdownMenu>\n                                    </Dropdown>\n\n                                    <div>\n                                        <center>\n\n                                            <Button\n                                                className=\"my-4\"\n                                                type=\"submit\"\n                                                disabled={(this.state.name.length >= 1 && this.state.regNo.length >= 1 && this.state.mobileNo.length >= 1 && this.state.email.length >= 1 && this.state.domain.length >= 1 && this.state.dateValue !== \"Date\" && this.state.timeValue !== \"Time\") ? false : true}\n                                            >\n                                                {loading && (\n                                                    <i\n                                                        className=\"fa fa-refresh fa-spin\"\n                                                        style={{ marginRight: \"5px\" }}\n                                                    />\n                                                )}\n                                                {loading && <span>Register</span>}\n                                                {!loading && <span>Register</span>}\n                                            </Button>\n\n                                        </center>\n                                    </div>\n                                </form>\n\n                                {/* End of the form */}\n\n                            </Col>                           \n\n                        </Row>\n                    </Container>\n                </section>\n                <Footer />\n            </div>\n        )\n    }\n}\nHero.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    errors: state.errors\n})\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(Hero)","import axios from 'axios';\r\nimport {  GET_ERRORS } from './types'\r\nimport { backURL } from '../utils/integration'\r\n// Register the user\r\n\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios\r\n        .post(`${backURL}/api/users/register`,userData)\r\n        .then(res => history.push('/'))\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        })\r\n};\r\n\r\n\r\n","export const backURL = \"http://localhost:5000\";\r\n","export const SET_CURRENT_USER = 'SET_CURRENT_USER'\r\nexport const SET_CURRENT_ORG = 'SET_CURRENT_ORG'\r\nexport const GET_ERRORS = 'GET_ERRORS'\r\nexport const GET_QUESTIONS = 'GET_QUESTIONS'","import { GET_ERRORS } from '../actions/types'\r\n\r\nconst initialState = {}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { SET_CURRENT_USER} from '../actions/types'\r\nconst initialState = {\r\n    user: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };        \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport errorReducer from './errorReducer'\r\nimport authReducer from './authReducer'\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer,\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport  thunk  from 'redux-thunk'\r\nimport roorReducer from './reducers'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    roorReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\r\n        compose\r\n    )\r\n)\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport Navbar1 from './navbar.component'\r\nimport Footer from './footer.component'\r\nimport { Container, Row, Col } from 'reactstrap' \r\nclass Finish extends Component {\r\n    onLogout = (e) => {\r\n        e.preventDefault();\r\n        this.props.logout();\r\n        this.props.history.push('/')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar1 />\r\n\r\n\r\n                <section className=\"section section-lg section-shaped\">\r\n                    <div className=\"shape shape-style-1 shape-default\">\r\n                    \r\n                    </div>\r\n                    <Container className=\"py-md\">\r\n                        <Row className=\"row-grid justify-content-between align-items-center\">\r\n                            <div style={{ margin: \"auto\", textAlign: \"center\" }}>\r\n                                <Col lg=\"12\">\r\n                                    <img\r\n                                        alt=\"...\"\r\n                                        className=\"img-fluid\"\r\n                                        style={{ paddingBottom: \"1em\", height: \"10em\" }}\r\n                                        src={require(\"../assets/img/happy.svg\")}\r\n\r\n                                    />\r\n                                    <h1 className=\"display-3 text-white\">\r\n                                        You have sucessfully completed the form.\r\n                                </h1>\r\n                                    <p className=\"lead text-white\">\r\n                                        We will be reaching out to you as soon as possible.\r\n                                         \r\n                                </p>\r\n                               \r\n                                   \r\n                                \r\n                                \r\n                            \r\n                                </Col>\r\n                            </div>\r\n                        </Row>\r\n                    </Container>\r\n                </section>         \r\n\r\n\r\n                <Footer />\r\n            \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Finish;\r\n\r\n\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Error from \"./components/error/error.component\";\r\nimport Navbar1 from \"./components/navbar.component\";\r\nimport Hero from './components/hero'\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport Finish from \"./components/end_exam.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Provider store={store}>\r\n        <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\r\n          <div>\r\n            <Navbar1 />\r\n            <Switch>\r\n             \r\n              <Route\r\n                path=\"/\"\r\n                exact\r\n                render={(props) => <Error />}\r\n              />\r\n              <Route\r\n                path=\"/finish\"\r\n                exact                \r\n                render={(props) => <Finish {...props} />}\r\n              />\r\n              \r\n              <Route component={Error} />\r\n            </Switch>\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"../src/assets/vendor/nucleo/css/nucleo.css\";\r\nimport \"../src/assets/vendor/font-awesome/css/font-awesome.min.css\";\r\nimport \"../src/assets/scss/customize.scss\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <App />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister()","module.exports = __webpack_public_path__ + \"static/media/white.5a203623.svg\";"],"sourceRoot":""}